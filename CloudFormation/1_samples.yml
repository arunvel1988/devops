####################################################################################

AWSTemplateFormatVersion: '2010-09-09'
Resources:
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0c55b159cbfafe1f0 # Amazon Linux 2 AMI
      InstanceType: t2.micro
      Tags:
        - Key: Name
          Value: example-instance

####################################################################################

AWSTemplateFormatVersion: '2010-09-09'
Resources:
  MyS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: my-unique-bucket-name-12345 # Replace with a unique name
      AccessControl: PublicRead
      Tags:
        - Key: Name
          Value: example-bucket

#####################################################################################


AWSTemplateFormatVersion: '2010-09-09'
Resources:
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: example-vpc

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: us-east-1a
      Tags:
        - Key: Name
          Value: public-subnet

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: us-east-1a
      Tags:
        - Key: Name
          Value: private-subnet



###########################################################################



AWSTemplateFormatVersion: '2010-09-09'
Resources:
  MyLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: ami-0c55b159cbfafe1f0 # Amazon Linux 2 AMI
      InstanceType: t2.micro
      SecurityGroups:
        - !Ref MySecurityGroup
      UserData:
        Fn::Base64: |
          #!/bin/bash
          echo "Hello, World!" > index.html
          nohup python -m SimpleHTTPServer 80 &

  MyASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref MyLaunchConfig
      MinSize: 1
      MaxSize: 3
      DesiredCapacity: 2
      VPCZoneIdentifier:
        - !Ref PublicSubnet
      Tags:
        - Key: Name
          Value: example-asg
          PropagateAtLaunch: true

  MyALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: example-lb
      Scheme: internet-facing
      Subnets:
        - !Ref PublicSubnet
      SecurityGroups:
        - !Ref MySecurityGroup

  MyTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      VpcId: !Ref MyVPC

  MyListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref MyALB
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref MyTargetGroup

#################################################################################



AWSTemplateFormatVersion: '2010-09-09'
Resources:
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0c55b159cbfafe1f0 # Amazon Linux 2 AMI
      InstanceType: t2.micro
      Tags:
        - Key: Name
          Value: example-instance

Outputs:
  InstanceId:
    Description: Instance ID of the EC2 instance
    Value: !Ref MyEC2Instance


#######################################################################################

aws cloudformation create-stack --stack-name aws-devops-stack --template-body file://template.yaml

aws cloudformation delete-stack --stack-name aws-devops-stack


#######################################################################################